<scene>
    <act type="text">
        <content>
			<ci>Другой вид циклов - for.</ci>
			<ci>Не углубляясь сейчас в подробности, скажу, что он может перебирать числа в диапазоне.</ci>
			<ci>Пример вывода чисел от 1 до 100:</ci>
			<ci><![CDATA[for i in range(1, 101):<br>&emsp;print(i)]]></ci>
			<ci><![CDATA[Конструкция range(a, b, c) перебирает все числа от <b>a</b> до <b>b-1</b> включительно с шагом <b>c</b>]]></ci>
			<ci><![CDATA[По умолчанию шаг <b>c</b> равен 1. То есть числа берутся в порядке возрастания.]]></ci>
			<ci><![CDATA[Чтобы использовались числа в порядке убывания, присвойте <b>c</b> значение -1]]></ci>
			<ci>Есть также несколько важных операций с циклами.</ci>
			<ci>Первая из них - прерывание.</ci>
			<ci><![CDATA[Она осуществляется ключевым словом <b>break</b>]]></ci>
			<ci>Например, нам нужно вывести первые 15 цифр в промежутке от 16 до 200. Воспользуемся циклом for:</ci>
			<ci><![CDATA[k = 0<br>for i in range(16, 201):<br>&emsp;print(i)<br>&emsp;k = k + 1<br>&emsp;if k &gt;= 15:<br>&emsp;&emsp;break]]></ci>
			<ci>Еще одна операция - переход к следующей итерации, то есть тело цикла не будет выполнено до конца.</ci>
			<ci><![CDATA[Он происходит с помощью слова <b>continue</b>]]></ci>
			<ci><![CDATA[Если мы хотим вывести все нечетные числа от <b>a</b> до <b>b</b>, то можно использовать следующую конструкцию:]]></ci>
			<ci><![CDATA[for i in range(a, b+1):<br>&emsp;if i % 2 == 0:<br>&emsp;&emsp;continue # если условие верно, дальше код исполняться не будет<br>&emsp;print(i)]]></ci>
			<ci>А сейчас можно решить несколько интересных задач!</ci>
</content>
        <bar>
            <button type="text">
                <name>@string/next</name>
                <action>nextAct_s4a7.xml</action>
            </button>
        </bar>
    </act>
</scene>